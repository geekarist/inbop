apply plugin: 'com.android.application'

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {

        buildConfigField('String', 'PLACES_API_PATH', '"/geekarist/inbop-api/master/places.json"')

        applicationId "me.cpele.inbop"
        minSdkVersion 15
        targetSdkVersion 25
        versionName "0.0.2"
        versionCode 5
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "en", "fr"

        multiDexEnabled true

        jackOptions {
            enabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {

        development {
            buildConfigField('String', 'PLACES_API_BASE_URL', '"https://rawgit.com"')
            applicationId "me.cpele.inbop.dev"
        }

        offlineEmulation {
            buildConfigField('String', 'PLACES_API_BASE_URL', '"http://10.0.2.2:8000"')
            buildConfigField('String', 'PLACES_API_PATH', '"/places.json"')
            applicationId "me.cpele.inbop.offline"
        }

        production {
            buildConfigField('String', 'PLACES_API_BASE_URL', '"https://cdn.rawgit.com"')
            buildConfigField('String', 'PLACES_API_PATH', '"/geekarist/inbop-api/450a18a89157ef0ea765385d13e22e78c8867b93/places.json"')
            applicationId "me.cpele.inbop.prod"
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        return true
    }
}

def supportVersion = '25.0.0'

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support:recyclerview-v7:${supportVersion}"
    compile "com.android.support:cardview-v7:${supportVersion}"
    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support:design:${supportVersion}"

    compile "com.android.support:multidex:1.0.1"

    //noinspection GradleDependency
    compile 'com.google.android.gms:play-services:9.6.1'
    //noinspection GradleDependency
    compile 'com.google.android.gms:play-services-maps:9.6.1'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.google.code.gson:gson:2.7'

    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    compile 'org.parceler:parceler-api:1.1.5'
    annotationProcessor 'org.parceler:parceler:1.1.5'

    testCompile 'junit:junit:4.12'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

task disableAnimations(type: Exec, dependsOn: 'installDevelopmentDebug') {
    commandLine "adb shell settings put global window_animation_scale 0".split(" ")
}

tasks.whenTaskAdded { task ->
    if (System.getenv()['CI'] && task.name.startsWith('connected')) {
        task.dependsOn disableAnimations
    }
}
